{"version":3,"sources":["script.js"],"names":["headernav","document","querySelector","headertoggle","headerclose","addEventListener","classList","add","remove","headerlink","querySelectorAll","removemenu","forEach","n","tabs","tableContent","scrollHeader","nav","getElementById","this","scrollY","scrollUp","tab","target","dataset","tabcont","window","themeButton","darkTheme","iconTheme","selectedTheme","localStorage","getItem","selectedIcon","getCurrentTheme","body","contains","getCurrentIcon","toggle","setItem"],"mappings":"AAAA,aAEA,IAAMA,UAAYC,SAASC,cAAc,gBACrCC,aAAeF,SAASC,cAAc,mBACtCE,YAAcH,SAASC,cAAc,kBAErCC,cACAA,aAAaE,iBAAiB,SAAS,WACnCL,UAAUM,UAAUC,IAAI,gBAI5BH,aACAA,YAAYC,iBAAiB,SAAS,WAClCL,UAAUM,UAAUE,OAAO,gBAKnC,IAAMC,WAAaR,SAASS,iBAAiB,iBAE7C,SAASC,aACLX,UAAUM,UAAUE,OAAO,aAE/BC,WAAWG,SAAQ,SAACC,GAAD,OAAOA,EAAER,iBAAiB,QAASM,eAMtD,IAAMG,KAAOb,SAASS,iBAAiB,iBACnCK,aAAed,SAASS,iBAAiB,kBAkB7C,SAASM,eACL,IAAMC,EAAMhB,SAASiB,eAAe,UAEhCC,KAAKC,SAAW,GAAIH,EAAIX,UAAUC,IAAI,iBACrCU,EAAIX,UAAUE,OAAO,iBAK9B,SAASa,WACL,IAAMA,EAAWpB,SAASiB,eAAe,aAErCC,KAAKC,SAAW,IAAKC,EAASf,UAAUC,IAAI,eAC3Cc,EAASf,UAAUE,OAAO,eA9BnCM,KAAKF,SAAQ,SAACU,GACVA,EAAIjB,iBAAiB,SAAS,WAC1B,IAAMkB,EAAStB,SAASC,cAAcoB,EAAIE,QAAQD,QAElDR,aAAaH,SAAQ,SAACa,GAClBA,EAAQnB,UAAUE,OAAO,yBAE7Be,EAAOjB,UAAUC,IAAI,sBAErBO,KAAKF,SAAQ,SAACU,GACVA,EAAIhB,UAAUE,OAAO,yBAEzBc,EAAIhB,UAAUC,IAAI,4BAW1BmB,OAAOrB,iBAAiB,SAAUW,cASlCU,OAAOrB,iBAAiB,SAAUgB,UAGlC,IAAMM,YAAc1B,SAASiB,eAAe,gBACtCU,UAAY,aACZC,UAAY,UAGZC,cAAgBC,aAAaC,QAAQ,kBACrCC,aAAeF,aAAaC,QAAQ,iBAGpCE,gBAAkB,WAAA,OACpBjC,SAASkC,KAAK7B,UAAU8B,SAASR,WAAa,OAAS,SACrDS,eAAiB,WAAA,OACnBV,YAAYrB,UAAU8B,SAASP,WAAa,WAAa,WAGzDC,gBAEA7B,SAASkC,KAAK7B,UAA4B,SAAlBwB,cAA2B,MAAQ,UACvDF,WAEJD,YAAYrB,UAA2B,aAAjB2B,aAA8B,MAAQ,UACxDJ,YAKRF,YAAYtB,iBAAiB,SAAS,WAElCJ,SAASkC,KAAK7B,UAAUgC,OAAOV,WAC/BD,YAAYrB,UAAUgC,OAAOT,WAE7BE,aAAaQ,QAAQ,iBAAkBL,mBACvCH,aAAaQ,QAAQ,gBAAiBF","file":"script.js","sourcesContent":["/////to hide or show the menu\r\n\r\nconst headernav = document.querySelector('.header__nav'),\r\n    headertoggle = document.querySelector('.header__toggle'),\r\n    headerclose = document.querySelector('.header__close');\r\n\r\nif (headertoggle) {\r\n    headertoggle.addEventListener('click', () => {\r\n        headernav.classList.add('show_menu');\r\n    });\r\n}\r\n\r\nif (headerclose) {\r\n    headerclose.addEventListener('click', () => {\r\n        headernav.classList.remove('show_menu');\r\n    });\r\n}\r\n//////pour enlever le menu de navigation lorsqu'on clique sur un headerlink\r\n\r\nconst headerlink = document.querySelectorAll('.header__link');\r\n\r\nfunction removemenu() {\r\n    headernav.classList.remove('show_menu');\r\n}\r\nheaderlink.forEach((n) => n.addEventListener('click', removemenu));\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////\r\n// pour gérer la timeline au niveau de expérience\r\nconst tabs = document.querySelectorAll('[data-target]'),\r\n    tableContent = document.querySelectorAll('[data-content]');\r\ntabs.forEach((tab) => {\r\n    tab.addEventListener('click', () => {\r\n        const target = document.querySelector(tab.dataset.target);\r\n\r\n        tableContent.forEach((tabcont) => {\r\n            tabcont.classList.remove('experience__active');\r\n        });\r\n        target.classList.add('experience__active');\r\n\r\n        tabs.forEach((tab) => {\r\n            tab.classList.remove('experience__active');\r\n        });\r\n        tab.classList.add('experience__active');\r\n    });\r\n});\r\n\r\n/*==================== CHANGE BACKGROUND HEADER ====================*/\r\nfunction scrollHeader() {\r\n    const nav = document.getElementById('header');\r\n    // When the scroll is greater than 200 viewport height, add the scroll-header class to the header tag\r\n    if (this.scrollY >= 80) nav.classList.add('scroll-header');\r\n    else nav.classList.remove('scroll-header');\r\n}\r\nwindow.addEventListener('scroll', scrollHeader);\r\n\r\n/*==================== SHOW SCROLL TOP ====================*/\r\nfunction scrollUp() {\r\n    const scrollUp = document.getElementById('scroll-up');\r\n    // When the scroll is higher than 560 viewport height, add the show-scroll class to the a tag with the scroll-top class\r\n    if (this.scrollY >= 560) scrollUp.classList.add('show-scroll');\r\n    else scrollUp.classList.remove('show-scroll');\r\n}\r\nwindow.addEventListener('scroll', scrollUp);\r\n\r\n/*==================== DARK LIGHT THEME ====================*/\r\nconst themeButton = document.getElementById('theme-button');\r\nconst darkTheme = 'dark-theme';\r\nconst iconTheme = 'uil-sun';\r\n\r\n// Previously selected topic (if user selected)\r\nconst selectedTheme = localStorage.getItem('selected-theme');\r\nconst selectedIcon = localStorage.getItem('selected-icon');\r\n\r\n// We obtain the current theme that the interface has by validating the dark-theme class\r\nconst getCurrentTheme = () =>\r\n    document.body.classList.contains(darkTheme) ? 'dark' : 'light';\r\nconst getCurrentIcon = () =>\r\n    themeButton.classList.contains(iconTheme) ? 'uil-moon' : 'uil-sun';\r\n\r\n// We validate if the user previously chose a topic\r\nif (selectedTheme) {\r\n    // If the validation is fulfilled, we ask what the issue was to know if we activated or deactivated the dark\r\n    document.body.classList[selectedTheme === 'dark' ? 'add' : 'remove'](\r\n        darkTheme\r\n    );\r\n    themeButton.classList[selectedIcon === 'uil-moon' ? 'add' : 'remove'](\r\n        iconTheme\r\n    );\r\n}\r\n\r\n// Activate / deactivate the theme manually with the button\r\nthemeButton.addEventListener('click', () => {\r\n    // Add or remove the dark / icon theme\r\n    document.body.classList.toggle(darkTheme);\r\n    themeButton.classList.toggle(iconTheme);\r\n    // We save the theme and the current icon that the user chose\r\n    localStorage.setItem('selected-theme', getCurrentTheme());\r\n    localStorage.setItem('selected-icon', getCurrentIcon());\r\n});\r\n"]}